#ifndef __RING_BUFFER_H__
#define __RING_BUFFER_H__

/////////////////////////////////////////////////////////////////////////////////////////

#include <stdint.h>
#include <stdlib.h>
#include "dbg.h"
/////////////////////////////////////////////////////////////////////////////////////////

typedef struct
{
    char *data;

    int length;
    int length_unit;
    int write_index;
    int read_index;

}RingBuffer;


/////////////////////////////////////////////////////////////////////////////////////////
RingBuffer* RingBuffer_create        (int size_global, int size_unit_byte);

/////////////////////////////////////////////////////////////////////////////////////////
void        RingBuffer_destroy       (RingBuffer *buffer);

/////////////////////////////////////////////////////////////////////////////////////////
int         RingBuffer_availableData (RingBuffer *buffer);

/////////////////////////////////////////////////////////////////////////////////////////
int         RingBuffer_read          (RingBuffer *buffer, char *target, int amount);

/////////////////////////////////////////////////////////////////////////////////////////
void        RingBuffer_commitRead    (RingBuffer *buffer);

/////////////////////////////////////////////////////////////////////////////////////////
int         RingBuffer_write         (RingBuffer *buffer, char *target, int amount);

/////////////////////////////////////////////////////////////////////////////////////////
int        RingBuffer_commitWrite   (RingBuffer *buffer);

#endif
